name: "CI"

on:
  push:
    branches:
      - "main"

  pull_request:
    branches:
    - "main"

  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-latest"
          - "macos-latest"
          - "windows-latest"

    runs-on: "${{ matrix.os }}"
    defaults:
      run:
        shell: "bash"
    steps:
      # Get values for cache paths to be used in later steps
      - id: "go-cache-paths"
        run: |
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: "⤵️ Checkout repository"
        uses: "actions/checkout@v4.1.2"

      - name: "🔧 Setup Go"
        uses: "actions/setup-go@v5"
        with:
          go-version-file: "go.mod"
          cache: true
        id: "go"

      # Cache go mod cache to speedup builds
      - name: "🛠️ Cache Go modules"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: "👷 Run the CI pipeline"
        run: "make ci"

      - name: "📊 Upload coverage reports"
        uses: "actions/upload-artifact@v4.3.1"
        with:
          name: "coverage-${{ matrix.os }}"
          path: "coverage.*"

      - name: "🚀 Release"
        run: "goreleaser release --clean --snapshot"
        if: "${{ runner.os == 'Linux' }}"

      - name: "📦 Upload dist"
        uses: "actions/upload-artifact@v4.3.1"
        with:
          name: "dist-${{ matrix.os }}"
          path: "dist"

      - name: "☂️ Upload coverage reports to Codecov"
        uses: "codecov/codecov-action@v4.1.0"
        with:
          verbose: true
          fail_ci_if_error: true
          file: "./coverage.out"
          slug: "auryannn/go-option"
          token: "${{ secrets.CODECOV_TOKEN }}"
